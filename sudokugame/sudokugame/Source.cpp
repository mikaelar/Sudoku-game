#include<iostream>
using namespace std;
const int N = 9;
const int SYMBOL = '_';

void print(int myArr[N][N], int number, char symbol) {
	if (number == 0) {
		cout << "You can' t insert zero!";
	}
	else
	{
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < N; j++) {
				if (myArr[i][j] == 0) {
					cout << symbol << " ";
				}
				else
					cout << myArr[i][j] << " ";
			}
			cout << endl;
		}
	}
}


int main() {
	int easy_first[N][N] = 
	  { { 1,4,5,6,2,3,9,8,7},
		{8,3,6,4,7,9,2,1,5},
		{7,2,9,1,5,8,3,4,6},
		{5,6,8,2,3,1,7,9,4},
		{9,7,2,5,6,4,8,3,1},
		{3,1,4,8,9,7,6,5,2},
		{4,8,7,3,1,2,5,6,9},
		{2,5,3,9,4,6,1,7,8},
		{6,9,1,7,8,5,4,2,3}};

	int easy_second[N][N] =
	{ { 5,1,7,9,4,3,8,6,2},
	  {4,2,9,6,7,8,1,5,3},
	  {6,8,3,1,5,2,7,9,4},
	  {2,5,4,3,9,7,6,8,1},
	  {3,7,8,2,6,1,9,4,5},
	  {9,6,1,5,8,4,3,2,7},
	  {1,9,6,7,2,5,4,3,8,},
	  {8,3,2,4,1,6,5,7,9},
	  {7,4,5,8,3,9,2,1,6} };

	int easy_third[N][N] =
	{ {5,6,4,1,3,8,7,2,9},
	  {3,1,2,6,7,9,5,4,8},
	  {8,9,7,2,4,5,1,3,6},
	  {1,7,6,8,9,2,3,5,4},
	  {9,4,5,3,6,7,8,1,2},
	  {2,3,8,4,5,1,6,9,7},
	  {7,2,9,5,8,3,4,6,1},
	  {6,5,1,7,2,4,9,8,3},
	  {4,8,3,9,1,6,2,7,5} };

	int easy_fourth[N][N] =
	{ {5,6,8,2,3,7,4,9,1},
	  {3,1,2,8,9,4,6,7,5},
	  {7,9,4,5,6,1,3,8,2},
	  {1,8,3,4,7,2,5,6,9},
	  {6,4,7,3,5,9,1,2,8},
	  {9,2,5,1,8,6,7,3,4},
	  {8,3,6,9,1,5,2,4,7},
	  {4,7,1,6,2,8,9,5,3},
	  {2,5,9,7,4,3,8,1,6} };

	int easy_fifth[N][N] =
	{ {8,3,6,5,1,4,9,2,7},
	  {4,5,1,2,9,7,3,6,8},
	  {9,7,2,6,8,3,5,4,1},
	  {1,8,9,4,6,5,2,7,3},
	  {2,4,3,1,7,9,8,5,6},
	  {5,6,7,8,3,2,1,9,4},
	  {6,9,8,7,2,1,4,3,5},
	  {3,1,5,9,4,6,7,8,2},
	  {7,2,4,3,5,8,6,1,9} };

	int medium_first[N][N] =
	{ {7,2,3,8,4,6,1,5,9},
	  {6,1,5,3,9,2,4,7,8},
	  {8,4,9,7,1,5,6,3,2},
	  {3,7,8,6,5,4,9,2,1},
	  {1,9,4,2,8,7,3,6,5},
	  {2,5,6,9,3,1,8,4,7},
	  {5,6,1,4,7,9,2,8,3},
	  {4,8,7,1,2,3,5,9,6},
	  {9,3,2,5,6,8,7,1,4} };

	int medium_second[N][N] =
	{ {3,2,7,1,5,8,9,4,6},
	  {6,1,9,4,3,7,5,8,2},
	  {5,4,8,9,6,2,7,1,3},
	  {1,8,6,5,7,4,3,2,9},
	  {4,3,2,6,8,9,1,5,7},
	  {9,7,5,3,2,1,4,6,8},
	  {7,6,4,2,1,3,8,9,5},
	  {8,5,1,7,9,6,2,3,4},
	  {2,9,3,8,4,5,6,7,1} };

	int medium_third[N][N] =
	{ {5,8,9,4,2,1,7,3,6},
	  {4,6,2,5,7,3,8,1,9},
	  {7,3,1,8,9,6,2,5,4},
	  {8,9,3,2,4,5,6,7,1},
	  {6,1,7,3,8,9,5,4,2},
	  {2,4,5,1,6,7,9,8,3},
	  {1,2,6,7,5,4,3,9,8},
	  {9,5,4,6,3,8,1,2,7},
	  {3,7,8,9,1,2,4,6,5} };

	int medium_fourth[N][N] =
	{ {6,5,8,2,9,3,4,1,7},
	  {7,4,1,5,6,8,9,2,3},
	  {9,3,2,1,7,4,5,6,8},
	  {3,5,8,9,2,1,7,4,6},
	  {1,6,7,4,8,5,2,3,9},
	  {4,2,9,7,3,6,8,5,1},
	  {2,7,4,3,1,9,6,8,5},
	  {8,9,3,6,5,2,1,7,4},
	  {5,1,6,8,4,7,3,9,2} };

	int medium_fifth[N][N] =
	{ {1,5,3,8,4,7,6,2,9},
	  {9,4,8,2,6,1,5,3,7},
	  {7,6,2,3,5,9,8,1,4},
	  {2,7,5,6,9,3,4,8,1},
	  {8,1,4,7,2,5,3,9,6},
	  {6,3,9,4,1,8,7,5,2},
	  {5,2,6,9,3,4,1,7,8},
	  {4,8,1,5,7,2,9,6,3},
	  {3,9,7,1,8,6,2,4,5} };

	int hard_first[N][N] =
	{ {3,2,1,6,5,8,9,4,7},
	  {7,8,4,3,1,9,2,6,5},
	  {9,5,6,7,2,4,1,3,8},
	  {5,4,9,1,3,2,7,8,6},
	  {6,7,2,4,8,5,3,1,9},
	  {8,1,3,9,7,6,5,2,4},
	  {1,9,5,8,6,3,4,7,2},
	  {2,6,7,5,4,1,8,9,3},
	  {} };

	int hard_second[N][N] =
	{ {8,3,4,1,5,7,2,9,6},
	  {5,2,1,8,6,9,4,7,3},
	  {6,9,7,3,2,4,1,5,8},
	  {1,6,5,2,9,3,7,8,4},
	  {7,8,3,6,4,5,9,2,1},
	  {2,4,9,7,1,8,3,6,5},
	  {4,7,8,5,3,2,6,1,9},
	  {3,1,2,9,8,6,5,4,7},
	  {9,5,6,4,7,1,8,3,2} };

	int hard_third[N][N] =
	{ {4,9,6,3,2,7,8,1,5},
	  {8,1,5,4,6,9,3,2,7},
	  {2,3,7,1,5,8,4,9,6},
	  {7,2,1,8,3,6,9,5,4},
	  {9,4,3,7,1,5,6,8,2},
	  {6,5,8,2,9,4,7,3,1},
	  {1,7,9,6,8,2,5,4,3},
	  {3,8,4,5,7,1,2,6,9},
	  {5,6,2,9,4,3,1,7,8} };

	int hard_fourth[N][N] =
	{ {5,2,3,6,9,4,8,7,1},
	  {9,7,4,2,8,1,3,6,5},
	  {8,1,6,7,3,5,2,4,9},
	  {1,8,5,3,6,2,7,9,4},
	  {2,3,7,4,5,9,1,8,6},
	  {4,6,9,8,1,7,5,2,3},
	  {6,9,8,5,2,3,4,1,7},
	  {3,4,1,9,7,8,6,5,2},
	  {7,5,2,1,4,6,9,3,8} };

	int hard_fifth[N][N] =
	{ {3,7,2,4,6,9,8,1,5},
	  {9,8,1,3,7,5,6,2,4},
	  {6,5,4,8,1,2,7,9,3},
	  {5,6,7,1,8,3,9,4,2},
	  {2,9,8,5,4,6,3,7,1},
	  {1,4,3,2,9,7,5,6,8},
	  {7,2,5,9,3,1,4,8,6},
	  {8,3,6,7,2,4,1,5,9},
	  {4,1,9,6,5,8,2,3,7} };

	return 0;
}